root = true

# C# files
[*.cs]

#### Formatting Rules ####

# Indentation and spacing
indent_style = space
indent_size = 4
tab_width = 4

# New line preferences
trim_trailing_whitespace = true
insert_final_newline = true

# Organize usings
dotnet_sort_system_directives_first = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_after_comma = true
csharp_space_before_dot = false
csharp_space_after_dot = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false
csharp_space_before_open_square_brackets = false

#### Code-style Rules ####

# Parentheses preferences
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:warning

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:error

# Expression-level preferences
dotnet_style_namespace_match_folder = true:error
dotnet_style_operator_placement_when_wrapping = beginning_of_line:suggestion
dotnet_style_prefer_compound_assignment = true:error
dotnet_style_prefer_conditional_expression_over_assignment = true:warning
dotnet_style_prefer_conditional_expression_over_return = false:suggestion
dotnet_style_collection_initializer = true
dotnet_style_object_initializer = true:warning
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:error
dotnet_style_prefer_auto_properties = true
dotnet_style_prefer_collection_expression = when_types_loosely_match:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:error
dotnet_style_prefer_simplified_boolean_expressions = true:error
dotnet_style_prefer_simplified_interpolation = true:warning

# Field preferences
dotnet_style_readonly_field = true:warning

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = all
dotnet_diagnostic.IDE0079.severity = error

# var preferences
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = false:suggestion

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:error
csharp_style_pattern_matching_over_is_with_cast_check = true:error
csharp_style_prefer_extended_property_pattern = true:error
csharp_style_prefer_not_pattern = true:error
csharp_style_prefer_pattern_matching = true:error
csharp_style_prefer_switch_expression = true:suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = true:error

# Modifier preferences
csharp_preferred_modifier_order = public, private, protected, internal, file, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, required, volatile, async
csharp_style_prefer_readonly_struct = true:suggestion
csharp_style_prefer_readonly_struct_member = true:suggestion

# Code-block preferences
csharp_prefer_braces = true
csharp_prefer_simple_using_statement = false
csharp_style_namespace_declarations = file_scoped:error
csharp_style_prefer_method_group_conversion = false
csharp_style_prefer_primary_constructors = false
csharp_style_prefer_top_level_statements = true:suggestion

# Expression-level preferences
csharp_prefer_simple_default_expression = true:warning
csharp_style_deconstructed_variable_declaration = true:warning
csharp_style_implicit_object_creation_when_type_is_apparent = true:error
csharp_style_inlined_variable_declaration = false:warning
csharp_style_prefer_index_operator = true:error
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:error
csharp_style_prefer_range_operator = true:error
csharp_style_prefer_tuple_swap = true:error
csharp_style_throw_expression = true:suggestion

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace

#### StyleCop Rules ####

# The code contains a tab or space character which is not consistent with the current project settings.
dotnet_diagnostic.SA1027.severity = none
# Regions must not be used
dotnet_diagnostic.SA1124.severity = error
# Regions must not be used within a code
dotnet_diagnostic.SA1123.severity = error
# Enable XML output
dotnet_diagnostic.SA1652.severity = none
# Field must not begin with an underscore
dotnet_diagnostic.SA1309.severity = none
# Prefix local call with this
dotnet_diagnostic.SA1101.severity = none
# Code header
dotnet_diagnostic.SA1633.severity = none
# Using directive must appear within a namespace declaration
dotnet_diagnostic.SA1200.severity = none
# Using directive must be ordered alphabetically by namespaces
dotnet_diagnostic.SA1210.severity = none
# The name of a field or variable in C# uses Hungarian notation.
dotnet_diagnostic.SA1305.severity = none
# An implicitly typed array allocation within a C# code file is not spaced correctly.
dotnet_diagnostic.SA1026.severity = error
# The encoding of the file is not UTF-8 with byte order mark.
dotnet_diagnostic.SA1412.severity = none
# The last statement in a multi-line C# initializer or list is missing a trailing comma.
dotnet_diagnostic.SA1413.severity = none
# All diagnostics of XML documentation comments has been disabled due to the current project configuration.
dotnet_diagnostic.SA0001.severity = none
# A parameter to a C# method or indexer, other than the first parameter, spans across multiple lines.
dotnet_diagnostic.SA1118.severity = none
# A static element is positioned beneath an instance element of the same type.
dotnet_diagnostic.SA1204.severity = none
# The file name of a C# code file does not match the first type declared in the file. For generics that are defined as Class1<T> the name of the file needs to be Class1{T}.cs or Class1`1.cs depending on the fileNamingConvention setting
dotnet_diagnostic.SA1649.severity = error
# The parameters to a C# method or indexer call or declaration are not all on the same line or each on a separate line.
dotnet_diagnostic.SA1117.severity = error
# The parameters to a C# method or indexer call or declaration span across multiple lines, but the first parameter does not start on the line after the opening bracket.
dotnet_diagnostic.SA1116.severity = error
# A single-line comment within a C# code file does not begin with a single space.
dotnet_diagnostic.SA1005.severity = error
# A single-line comment within C# code is not preceded by a blank line.
dotnet_diagnostic.SA1515.severity = error
# A closing brace within a C# element, statement, or expression is not followed by a blank line.
dotnet_diagnostic.SA1513.severity = error
# An element within a C# code file is out of order within regard to access level, in relation to other elements in the code.
dotnet_diagnostic.SA1202.severity = error
# The opening and closing braces for a C# statement have been omitted.
dotnet_diagnostic.SA1503.severity = error
# A generic constraint on a type or method declaration is on the same line as the declaration, within a C# code file.
dotnet_diagnostic.SA1127.severity = error
# A closing brace within a C# element, statement, or expression is preceded by a blank line.
dotnet_diagnostic.SA1508.severity = error
# An opening brace within a C# element, statement, or expression is followed by a blank line.
dotnet_diagnostic.SA1505.severity = error
# A constant field is placed beneath a non-constant field.
dotnet_diagnostic.SA1203.severity = error
# Using directive for 'System' must appear before
dotnet_diagnostic.SA1208.severity = error
# The spacing around a C# keyword is incorrect.
dotnet_diagnostic.SA1000.severity = none
# An element within a C# code file is out of order in relation to the other elements in the code.
dotnet_diagnostic.SA1201.severity = error
# The spacing around a comma is incorrect, within a C# code file.
dotnet_diagnostic.SA1001.severity = error
# A negative sign within a C# element is not spaced correctly.
dotnet_diagnostic.SA1021.severity = error
# A positive sign within a C# element is not spaced correctly.
dotnet_diagnostic.SA1022.severity = error
# A call to a member from an inherited class begins with base., and the local class does not contain an override or implementation of the member.
dotnet_diagnostic.SA1100.severity = error
# The C# code contains an extra semicolon.
dotnet_diagnostic.SA1106.severity = error
# The closing parenthesis or bracket in a call to a C# method or indexer, or the declaration of a method or indexer, is not placed on the same line as the last parameter.
dotnet_diagnostic.SA1111.severity = error
# The closing parenthesis or bracket in a call to a C# method or indexer, or the declaration of a method or indexer, is not placed on the same line as the opening bracket when the element does not take any parameters.
dotnet_diagnostic.SA1112.severity = error
# A C# statement contains parenthesis which are unnecessary and should be removed.
dotnet_diagnostic.SA1119.severity = error
# The code uses one of the basic C# types, but does not use the built-in alias for the type.
dotnet_diagnostic.SA1121.severity = error
# The C# code includes an empty string, written as "".
dotnet_diagnostic.SA1122.severity = none
# Two or more attributes appeared within the same set of square brackets.
dotnet_diagnostic.SA1133.severity = error
# Two sibling elements which each start on their own line have different levels of indentation.
dotnet_diagnostic.SA1137.severity = error
# Adjacent C# elements are not separated by a blank line.
dotnet_diagnostic.SA1516.severity = none
# The name of a C# element does not begin with an upper-case letter.
dotnet_diagnostic.SA1300.severity = error
# The name of a C# interface does not begin with the capital letter I.
dotnet_diagnostic.SA1302.severity = error
# The name of a constant C# field should begin with an upper-case letter.
dotnet_diagnostic.SA1303.severity = error
# The name of a non-private readonly C# field should being with an upper-case letter.
dotnet_diagnostic.SA1304.severity = error
# The name of a static readonly field does not begin with an upper-case letter.
dotnet_diagnostic.SA1311.severity = error
# The access modifier for a C# element has not been explicitly defined.
dotnet_diagnostic.SA1400.severity = error
# A field within a C# class has an access modifier other than private.
dotnet_diagnostic.SA1401.severity = warning
# A C# code file contains more than one unique type.
dotnet_diagnostic.SA1402.severity = error
# A C# code file contains more than one namespace.
dotnet_diagnostic.SA1403.severity = error
# A Code Analysis SuppressMessage attribute does not include a justification.
dotnet_diagnostic.SA1404.severity = error
# A call to Debug.Assert in C# code does not include a descriptive message.
dotnet_diagnostic.SA1405.severity = error
# A call to Debug.Fail in C# code does not include a descriptive message.
dotnet_diagnostic.SA1406.severity = error
# A C# statement contains a complex arithmetic expression which omits parenthesis around operators.
dotnet_diagnostic.SA1407.severity = error
# A C# statement contains a complex conditional expression which omits parenthesis around operators.
dotnet_diagnostic.SA1408.severity = error
# A call to a C# anonymous method does not contain any method parameters, yet the statement still includes parenthesis.
dotnet_diagnostic.SA1410.severity = error
# An attribute declaration does not contain any parameters, yet it still includes parenthesis.
dotnet_diagnostic.SA1411.severity = error
# A C# code element is missing a documentation header.
dotnet_diagnostic.SA1600.severity = none
# A C# partial element is missing a documentation header.
dotnet_diagnostic.SA1601.severity = none
# An item within a C# enumeration is missing an Xml documentation header.
dotnet_diagnostic.SA1602.severity = none
# The Xml within a C# element's document header is badly formed.
dotnet_diagnostic.SA1603.severity = error
# The Xml header documentation for a C# property does not contain a <value> tag.
dotnet_diagnostic.SA1609.severity = warning
# The file header at the top of a C# code file does not contain the appropriate copyright text.
dotnet_diagnostic.SA1636.severity = error
# The XML documentation header for a C# constructor does not contain the appropriate summary text.
dotnet_diagnostic.SA1642.severity = error
# The Xml documentation header for a C# finalizer does not contain the appropriate summary text.
dotnet_diagnostic.SA1643.severity = error
# The spacing around a semicolon is incorrect, within a C# code file.
dotnet_diagnostic.SA1002.severity = error
# The spacing around an operator symbol is incorrect, within a C# code file.
dotnet_diagnostic.SA1003.severity = error
# A line within a documentation header above a C# element does not begin with a single space.
dotnet_diagnostic.SA1004.severity = error
# A C# preprocessor-type keyword is preceded by space.
dotnet_diagnostic.SA1006.severity = error
# The operator keyword within a C# operator overload method is not followed by any whitespace.
dotnet_diagnostic.SA1007.severity = error
# An opening parenthesis within a C# statement is not spaced correctly.
dotnet_diagnostic.SA1008.severity = error
#A closing parenthesis within a C# statement is not spaced correctly.
dotnet_diagnostic.SA1009.severity = none
# An opening square bracket within a C# statement is not spaced correctly.
dotnet_diagnostic.SA1010.severity = none
# A closing square bracket within a C# statement is not spaced correctly.
dotnet_diagnostic.SA1011.severity = error
# An opening brace within a C# element is not spaced correctly.
dotnet_diagnostic.SA1012.severity = error
# A closing brace within a C# element is not spaced correctly.
dotnet_diagnostic.SA1013.severity = error
# An opening generic bracket within a C# element is not spaced correctly.
dotnet_diagnostic.SA1014.severity = error
# A closing generic bracket within a C# element is not spaced correctly.
dotnet_diagnostic.SA1015.severity = error
# An opening attribute bracket within a C# element is not spaced correctly.
dotnet_diagnostic.SA1016.severity = error
# A closing attribute bracket within a C# element is not spaced correctly.
dotnet_diagnostic.SA1017.severity = error
# A nullable type symbol within a C# element is not spaced correctly.
dotnet_diagnostic.SA1018.severity = error
# The spacing around a member access symbol is incorrect, within a C# code file.
dotnet_diagnostic.SA1019.severity = error
# An increment or decrement symbol within a C# element is not spaced correctly.
dotnet_diagnostic.SA1020.severity = error
# A dereference symbol or an access-of symbol within a C# element is not spaced correctly.
dotnet_diagnostic.SA1023.severity = error
# A colon within a C# element is not spaced correctly.
dotnet_diagnostic.SA1024.severity = error
# The code contains multiple whitespace characters in a row.
dotnet_diagnostic.SA1025.severity = error
# A line of code ends with a space, tab, or other whitespace characters before the end of line character(s).
dotnet_diagnostic.SA1028.severity = error
# A C# query clause does not begin on the same line as the previous clause, or on the next line.
dotnet_diagnostic.SA1102.severity = error
# The clauses within a C# query expression are not all placed on the same line, and each clause is not placed on its own line.
dotnet_diagnostic.SA1103.severity = error
# A clause within a C# query expression begins on the same line as the previous clause, when the previous clause spans across multiple lines.
dotnet_diagnostic.SA1104.severity = error
# A clause within a C# query expression spans across multiple lines, and does not begin on its own line.
dotnet_diagnostic.SA1105.severity = error
# The C# code contains more than one statement on a single line.
dotnet_diagnostic.SA1107.severity = error
# A C# statement contains a comment between the declaration of the statement and the opening brace of the statement.
dotnet_diagnostic.SA1108.severity = error
# A C# statement contains a region tag between the declaration of the statement and the opening brace of the statement.
dotnet_diagnostic.SA1109.severity = error
# The opening parenthesis or bracket in a call to a C# method or indexer, or the declaration of a method or indexer, is not placed on the same line as the method or indexer name.
dotnet_diagnostic.SA1110.severity = error
# A comma between two parameters in a call to a C# method or indexer, or in the declaration of a method or indexer, is not placed on the same line as the previous parameter.
dotnet_diagnostic.SA1113.severity = error
# The start of the parameter list for a method or indexer call or declaration does not begin on the same line as the opening bracket, or on the line after the opening bracket.
dotnet_diagnostic.SA1114.severity = error
# A parameter within a C# method or indexer call or declaration does not begin on the same line as the previous parameter, or on the next line.
dotnet_diagnostic.SA1115.severity = error
# The C# comment does not contain any comment text.
dotnet_diagnostic.SA1120.severity = error
# A call to a member is not prefixed with the 'this.', 'base.', 'object.' or 'typename.' prefix to indicate the intended method call, within a C# code file.
dotnet_diagnostic.SA1126.severity = error
# The partial element does not have an access modifier defined.
dotnet_diagnostic.SA1205.severity = error
# The keywords within the declaration of an element do not follow a standard ordering scheme.
dotnet_diagnostic.SA1206.severity = none
# The keyword protected is positioned after the keyword internal within the declaration of a protected internal C# element, or the keyword private is positioned after the keyword protected.
dotnet_diagnostic.SA1207.severity = error
# The name of a field in C# does not begin with a lower-case letter.
dotnet_diagnostic.SA1306.severity = error
# The name of a public or internal field in C# does not begin with an upper-case letter.
dotnet_diagnostic.SA1307.severity = error
# A field name in C# contains an underscore.
dotnet_diagnostic.SA1310.severity = error
# The name of a variable in C# does not begin with a lower-case letter.
dotnet_diagnostic.SA1312.severity = error
# The name of a parameter in C# does not begin with a lower-case letter.
dotnet_diagnostic.SA1313.severity = none
# A C# file contains code which is unnecessary and can be removed without changing the overall logic of the code.
dotnet_diagnostic.SA1409.severity = error
# The opening or closing brace within a C# statement, element, or expression is not placed on its own line.
dotnet_diagnostic.SA1500.severity = error
# A C# statement containing opening and closing braces is written completely on a single line.
dotnet_diagnostic.SA1501.severity = error
# A C# element containing opening and closing braces is written completely on a single line.
dotnet_diagnostic.SA1502.severity = error
# Within a C# property, indexer or event, at least one of the child accessors is written on a single line, and at least one of the child accessors is written across multiple lines.
dotnet_diagnostic.SA1504.severity = error
# An element documentation header above a C# element is followed by a blank line.
dotnet_diagnostic.SA1506.severity = error
# The C# code contains multiple blank lines in a row.
dotnet_diagnostic.SA1507.severity = error
# An opening brace within a C# element, statement, or expression is preceded by a blank line.
dotnet_diagnostic.SA1509.severity = error
# Chained C# statements are separated by a blank line.
dotnet_diagnostic.SA1510.severity = error
# The while footer at the bottom of a do-while statement is separated from the statement by a blank line.
dotnet_diagnostic.SA1511.severity = error
# A single-line comment within C# code is followed by a blank line.
dotnet_diagnostic.SA1512.severity = none
# An element documentation header above a C# element is not preceded by a blank line.
dotnet_diagnostic.SA1514.severity = error
# The code file has blank lines at the start.
dotnet_diagnostic.SA1517.severity = error
# The line endings at the end of a file do not match the settings for the project.
dotnet_diagnostic.SA1518.severity = error
# The opening and closing braces for a multi-line C# statement have been omitted.
dotnet_diagnostic.SA1519.severity = error
# The opening and closing braces of a chained if/else if/else construct were included for some clauses, but omitted for others.
dotnet_diagnostic.SA1520.severity = error
# The Xml header documentation for a C# element is missing a <summary> tag.
dotnet_diagnostic.SA1604.severity = error
# The <summary> tag within an element's Xml header documentation contains the default text generated by Visual Studio during the creation of the element.
dotnet_diagnostic.SA1608.severity = error
# The Xml header documentation for a C# property contains an empty <value> tag.
dotnet_diagnostic.SA1610.severity = error
# The documentation describing the parameters to a C# method, constructor, delegate or indexer element does not match the actual parameters on the element.
dotnet_diagnostic.SA1612.severity = error
# A <param> tag within a C# element's documentation header is missing a name attribute containing the name of the parameter.
dotnet_diagnostic.SA1613.severity = error
# A <param> tag within a C# element's documentation header is empty.
dotnet_diagnostic.SA1614.severity = error
# A C# element is missing documentation for its return value.
dotnet_diagnostic.SA1615.severity = error
# The <returns> tag within a C# element's documentation header is empty.
dotnet_diagnostic.SA1616.severity = error
# A C# code element does not contain a return value, or returns void, but the documentation header for the element contains a <returns> tag.
dotnet_diagnostic.SA1617.severity = error
# The Xml documentation for a C# element contains two or more identical entries, indicating that the documentation has been copied and pasted. This can sometimes indicate invalid or poorly written documentation.
dotnet_diagnostic.SA1625.severity = error
# The C# code contains a single-line comment which begins with three forward slashes in a row.
dotnet_diagnostic.SA1626.severity = error
# The Xml header documentation for a C# code element contains an empty tag.
dotnet_diagnostic.SA1627.severity = error
# A section within the Xml documentation header for a C# element contains blank lines.
dotnet_diagnostic.SA1644.severity = error
# A call to an instance member of the local class or a base class is prefixed with this..
dotnet_diagnostic.SX1101.severity = error
# A field name does not begin with an underscore.
dotnet_diagnostic.SX1309.severity = error
# Unnecessary using directives
dotnet_diagnostic.IDE0005.severity = error
# XML documentation required
dotnet_diagnostic.CS1591.severity = none
